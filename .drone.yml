kind: pipeline
name: default

steps:
- name: Configure Vault
  image: vault:0.11.4
  commands:
    - vault secrets disable secret
    - vault secrets enable -path=secret -version=1 kv
    - vault secrets enable totp
  environment:
    VAULT_TOKEN: changeme
    VAULT_DEV_ROOT_TOKEN_ID: changeme
    VAULT_ADDR: http://vault:8200
  when:
    event:
      - pull_request

- name: Run rspec
  image: ruby:2.6.5
  environment:
    DATABASE_HOST: database
    EVENT_API_RABBITMQ_HOST: rabbitmq
    BARONG_VAULT_ADDR: http://vault:8200
    RAILS_ENV: test
    RAILS_MASTER_KEY:
      from_secret: rails_master_key
  commands:
    - bundle
    - ./bin/init_config
    - rake db:create db:migrate
    - rspec
  when:
    event:
      - pull_request

- name: Bump and tag
  image: quay.io/openware/sdk-tools:1.0.0-7cd0e1a
  environment:
    BOT_USERNAME: kite-bot
    BOT_NAME: Kite Bot
    BOT_EMAIL: kite-bot@heliostech.fr
    BRANCH_NAME: ${DRONE_BRANCH}
    REPO_NAME: ${DRONE_REPO}
    GITHUB_API_KEY:
      from_secret: kite_bot_key
    RAILS_MASTER_KEY:
      from_secret: rails_master_key
  commands:
    - BUNDLE_GEMFILE=/sdk/Gemfile bundle exec rake --rakefile=/sdk/Rakefile release:push ci:write_version
  when:
    event:
      - push
    branch:
      - master
      - 2-2-stable
      - 2-3-stable

- name: docs-generate
  image: quay.io/openware/sdk-tools:1.0.0-7cd0e1a
  environment:
    BOT_USERNAME: kite-bot
    BOT_NAME: Kite Bot
    BOT_EMAIL: kite-bot@heliostech.fr
    REPO_NAME: ${DRONE_REPO}
    BRANCH_NAME: ${DRONE_BRANCH}
    SDK_BRANCH: ${DRONE_BRANCH}
    GITHUB_API_KEY:
      from_secret: kite_bot_key
    RAILS_MASTER_KEY:
      from_secret: rails_master_key
  commands:
    - cd /sdk
    - bundle exec rake ci:pull ci:changelog['/drone/src/'] ci:copy_docs['/drone/src/'] ci:push
  when:
    event:
      - push
    branch:
      - master
      - 2-2-stable
      - 2-3-stable

- name: Telegram and Slack notifying
  image: quay.io/openware/sdk-tools:1.0.0-7001fe8
  environment:
    REPO_NAME: ${DRONE_REPO}
    BRANCH_NAME: ${DRONE_BRANCH}
    TELEGRAM_BOT_TOKEN:
      from_secret: telegram_bot_key
    TELEGRAM_CHAT_ID:
      from_secret: telegram_chat_id
    GITHUB_API_KEY:
      from_secret: kite_bot_key
    RAILS_MASTER_KEY:
      from_secret: rails_master_key
    SLACK_TOKEN:
      from_secret: slack_token
    SLACK_CHANNEL:
      from_secret: slack_channel
  commands:
      - BUNDLE_GEMFILE=/sdk/Gemfile bundle exec rake --rakefile=/sdk/Rakefile ci:notify:all
  when:
    event:
      - push
    branch:
      - master
      - 2-2-stable
      - 2-3-stable

- name: Docker build and push
  image: plugins/docker
  settings:
    username:
      from_secret: quay_username
    password:
      from_secret: quay_password
    repo: quay.io/openware/barong
    registry: quay.io
  when:
    event:
      - push
    branch:
      - master
      - 1-8-stable
      - 1-9-stable
      - 2-2-stable
      - 2-3-stable

- name: Redeploy
  image: rubykube/microkube:0.3.0
  environment:
      WEBHOOK_JWT_SECRET:
        from_secret: webhook_secret
      WEBHOOK_URL:
        from_secret: webhook_url
  commands:
    - export latest_image=rubykube/barong:$(cat .tags)
    - cd /home/app
    - bundle exec rake payload:send[barong,$latest_image,$WEBHOOK_URL]
  when:
    branch:
      - master
    event:
      - push

services:
- name: database
  image: mariadb
  ports:
    - 3306
  environment:
    MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'

- name: rabbitmq
  image: rabbitmq:3.7.6
  ports:
    - 5672

- name: vault
  image: vault:0.11.4
  ports:
    - 8200
  environment:
    SKIP_SETCAP: 1
    VAULT_TOKEN: changeme
    VAULT_DEV_ROOT_TOKEN_ID: changeme
    VAULT_ADDR: http://vault:8200

image_pull_secrets:
- dockerconfigjson
