{
  "info": {
    "title": "Barong",
    "description": "RESTful AdminAPI for barong OAuth server",
    "version": "2.7.0"
  },
  "swagger": "2.0",
  "produces": [
    "application/json"
  ],
  "host": "localhost:3000",
  "basePath": "/api/v2/barong/admin",
  "tags": [
    {
      "name": "api",
      "description": "Operations about apis"
    }
  ],
  "paths": {
    "/api/v2/barong/admin/users/data_storage": {
      "delete": {
        "description": "Deletes user's data storage record",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "uid",
            "description": "user uniq id",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "title",
            "description": "data storage uniq title",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "204": {
            "description": "Deletes user's data storage record"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "deleteApiV2BarongAdminUsersDataStorage"
      }
    },
    "/api/v2/barong/admin/users/{uid}": {
      "get": {
        "description": "Returns user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uid",
            "description": "user uniq id",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns user info"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "getApiV2BarongAdminUsersUid"
      }
    },
    "/api/v2/barong/admin/users/documents/pending": {
      "get": {
        "description": "Returns array of users with pending or replaced documents as paginated collection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "extended",
            "description": "When true endpoint returns full information about users",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "uid",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "email",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "role",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "first_name",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "last_name",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "country",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "level",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "state",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "range",
            "type": "string",
            "default": "created",
            "required": false
          },
          {
            "in": "query",
            "name": "from",
            "description": "An integer represents the seconds elapsed since Unix epoch.If set, only records FROM the time will be retrieved.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "to",
            "description": "An integer represents the seconds elapsed since Unix epoch.If set, only records BEFORE the time will be retrieved.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page number (defaults to 1).",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of users per page (defaults to 100, maximum is 100).",
            "type": "integer",
            "format": "int32",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns array of users with pending or replaced documents as paginated collection"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "getApiV2BarongAdminUsersDocumentsPending"
      }
    },
    "/api/v2/barong/admin/users": {
      "put": {
        "description": "Update user attributes",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "uid",
            "description": "user uniq id",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "email",
            "description": "User Email",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "state",
            "description": "user state",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "otp",
            "description": "user 2fa status",
            "type": "boolean",
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Update user attributes"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "putApiV2BarongAdminUsers"
      },
      "get": {
        "description": "Returns array of users as paginated collection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "extended",
            "description": "When true endpoint returns full information about users",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "uid",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "email",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "role",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "country",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "level",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "state",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "range",
            "type": "string",
            "default": "created",
            "required": false
          },
          {
            "in": "query",
            "name": "ordering",
            "description": "If set, returned values will be sorted in specific order, defaults to 'asc'.",
            "type": "string",
            "default": "asc",
            "required": false
          },
          {
            "in": "query",
            "name": "order_by",
            "description": "Name of the field, which result will be ordered by.",
            "type": "string",
            "default": "id",
            "required": false
          },
          {
            "in": "query",
            "name": "from",
            "description": "An integer represents the seconds elapsed since Unix epoch.If set, only records FROM the time will be retrieved.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "to",
            "description": "An integer represents the seconds elapsed since Unix epoch.If set, only records BEFORE the time will be retrieved.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page number (defaults to 1).",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of users per page (defaults to 100, maximum is 100).",
            "type": "integer",
            "format": "int32",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns array of users as paginated collection"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "getApiV2BarongAdminUsers"
      }
    },
    "/api/v2/barong/admin/users/role": {
      "post": {
        "description": "Update user role",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "uid",
            "description": "user uniq id",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "role",
            "description": "user role",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "201": {
            "description": "Update user role"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "postApiV2BarongAdminUsersRole"
      }
    },
    "/api/v2/barong/admin/users/update": {
      "post": {
        "description": "Update user attributes",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "uid",
            "description": "user uniq id",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "state",
            "description": "user state",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "otp",
            "description": "user 2fa status",
            "type": "boolean",
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "201": {
            "description": "Update user attributes"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "postApiV2BarongAdminUsersUpdate"
      }
    },
    "/api/v2/barong/admin/users/labels": {
      "delete": {
        "description": "Deletes label for user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "uid",
            "description": "user uniq id",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "key",
            "description": "label key. [a-z0-9_-]+ should be used. Min - 3, max - 255 characters.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "scope",
            "description": "label key. [a-z0-9_-]+ should be used. Min - 3, max - 255 characters.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "204": {
            "description": "Deletes label for user"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "deleteApiV2BarongAdminUsersLabels"
      },
      "put": {
        "description": "Update user label scope",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "uid",
            "description": "user uniq id",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "key",
            "description": "Label key.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "scope",
            "description": "label key. [a-z0-9_-]+ should be used. Min - 3, max - 255 characters.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "description",
            "description": "label description. [A-Za-z0-9_-] should be used. max - 255 characters.",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "value",
            "description": "Label value.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Update user label scope"
          },
          "400": {
            "description": "Required params are empty"
          },
          "401": {
            "description": "Invalid bearer token"
          },
          "404": {
            "description": "Record is not found"
          },
          "422": {
            "description": "Validation errors"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "putApiV2BarongAdminUsersLabels"
      },
      "post": {
        "description": "Adds label for user",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "uid",
            "description": "user uniq id",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "key",
            "description": "label key. [a-z0-9_-]+ should be used. Min - 3, max - 255 characters.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "value",
            "description": "label value. [A-Za-z0-9_-] should be used. Min - 3, max - 255 characters.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "description",
            "description": "label description. [A-Za-z0-9_-] should be used. max - 255 characters.",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "scope",
            "description": "Label scope: 'public' or 'private'. Default is public",
            "type": "string",
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "201": {
            "description": "Adds label for user"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "postApiV2BarongAdminUsersLabels"
      },
      "get": {
        "description": "Returns array of users as paginated collection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "key",
            "description": "Label key",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "value",
            "description": "Label value",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page number (defaults to 1).",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of users per page (defaults to 100, maximum is 100).",
            "type": "integer",
            "format": "int32",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns array of users as paginated collection"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "getApiV2BarongAdminUsersLabels"
      }
    },
    "/api/v2/barong/admin/users/labels/update": {
      "post": {
        "description": "Update user label value",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "uid",
            "description": "user uniq id",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "key",
            "description": "Label key.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "scope",
            "description": "label key. [a-z0-9_-]+ should be used. Min - 3, max - 255 characters.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "value",
            "description": "Label value.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "description",
            "description": "label description. [A-Za-z0-9_-] should be used. max - 255 characters.",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "replace",
            "description": "When true label will be created if not exist",
            "type": "boolean",
            "default": true,
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "201": {
            "description": "Update user label value"
          },
          "400": {
            "description": "Required params are empty"
          },
          "401": {
            "description": "Invalid bearer token"
          },
          "404": {
            "description": "Record is not found"
          },
          "422": {
            "description": "Validation errors"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "postApiV2BarongAdminUsersLabelsUpdate"
      }
    },
    "/api/v2/barong/admin/users/labels/list": {
      "get": {
        "description": "Returns existing labels keys and values",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns existing labels keys and values"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "getApiV2BarongAdminUsersLabelsList"
      }
    },
    "/api/v2/barong/admin/users/comments": {
      "delete": {
        "description": "Delete user's comment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "comment uniq id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "204": {
            "description": "Delete user's comment"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "deleteApiV2BarongAdminUsersComments"
      },
      "put": {
        "description": "Edit user's comment",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "id",
            "description": "comment uniq id",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "formData",
            "name": "title",
            "description": "comment title",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "data",
            "description": "comment data",
            "type": "string",
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Edit user's comment"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "putApiV2BarongAdminUsersComments"
      },
      "post": {
        "description": "Adds new user's comment",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "uid",
            "description": "user uniq id",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "title",
            "description": "comment uniq title",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "data",
            "description": "comment data",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "201": {
            "description": "Adds new user's comment"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "postApiV2BarongAdminUsersComments"
      }
    },
    "/api/v2/barong/admin/api_keys": {
      "get": {
        "description": "List all api keys for selected account.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "uid",
            "description": "user uniq id",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "ordering",
            "description": "If set, returned values will be sorted in specific order, defaults to 'asc'.",
            "type": "string",
            "default": "asc",
            "required": false
          },
          {
            "in": "query",
            "name": "order_by",
            "description": "Name of the field, which result will be ordered by.",
            "type": "string",
            "default": "id",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page number (defaults to 1).",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of users per page (defaults to 100, maximum is 100).",
            "type": "integer",
            "format": "int32",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "List all api keys for selected account."
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "getApiV2BarongAdminApiKeys"
      }
    },
    "/api/v2/barong/admin/permissions": {
      "put": {
        "description": "Update Permission",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "id",
            "description": "Permission id",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "formData",
            "name": "role",
            "description": "permission field - role",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "verb",
            "description": "permission field - request verb",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "path",
            "description": "permission field - request path",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "action",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "topic",
            "type": "string",
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Update Permission"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "putApiV2BarongAdminPermissions"
      },
      "delete": {
        "description": "Deletes permission",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "permission id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "204": {
            "description": "Deletes permission"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "deleteApiV2BarongAdminPermissions"
      },
      "post": {
        "description": "Create permission",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "role",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "verb",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "path",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "action",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "topic",
            "type": "string",
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "201": {
            "description": "Create permission"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "postApiV2BarongAdminPermissions"
      },
      "get": {
        "description": "Returns array of permissions as paginated collection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Page number (defaults to 1).",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of users per page (defaults to 100, maximum is 100).",
            "type": "integer",
            "format": "int32",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns array of permissions as paginated collection"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "getApiV2BarongAdminPermissions"
      }
    },
    "/api/v2/barong/admin/activities/admin": {
      "get": {
        "description": "Returns array of activities as paginated collection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "topic",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "action",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "uid",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "email",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "from",
            "description": "An integer represents the seconds elapsed since Unix epoch.If set, only records FROM the time will be retrieved.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "to",
            "description": "An integer represents the seconds elapsed since Unix epoch.If set, only records BEFORE the time will be retrieved.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page number (defaults to 1).",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of users per page (defaults to 100, maximum is 100).",
            "type": "integer",
            "format": "int32",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "required": false
          },
          {
            "in": "query",
            "name": "target_uid",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "range",
            "type": "string",
            "default": "created",
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns array of activities as paginated collection"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "getApiV2BarongAdminActivitiesAdmin"
      }
    },
    "/api/v2/barong/admin/activities": {
      "get": {
        "description": "Returns array of activities as paginated collection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "topic",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "action",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "uid",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "email",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "from",
            "description": "An integer represents the seconds elapsed since Unix epoch.If set, only records FROM the time will be retrieved.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "to",
            "description": "An integer represents the seconds elapsed since Unix epoch.If set, only records BEFORE the time will be retrieved.",
            "type": "integer",
            "format": "int32",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page number (defaults to 1).",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of users per page (defaults to 100, maximum is 100).",
            "type": "integer",
            "format": "int32",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns array of activities as paginated collection"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "getApiV2BarongAdminActivities"
      }
    },
    "/api/v2/barong/admin/metrics": {
      "get": {
        "description": "Returns main statistic in the given time period",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "created_from",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "created_to",
            "type": "string",
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns main statistic in the given time period"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "getApiV2BarongAdminMetrics"
      }
    },
    "/api/v2/barong/admin/restrictions": {
      "delete": {
        "description": "Delete restriction",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "Restriction id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "204": {
            "description": "Delete restriction"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "deleteApiV2BarongAdminRestrictions"
      },
      "put": {
        "description": "Update restriction",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "id",
            "description": "Restriction id",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "formData",
            "name": "scope",
            "type": "string",
            "enum": [
              "continent",
              "country",
              "ip",
              "ip_subnet",
              "all"
            ],
            "required": false
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string",
            "enum": [
              "whitelist",
              "maintenance",
              "blacklist"
            ],
            "required": false
          },
          {
            "in": "formData",
            "name": "value",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "state",
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ],
            "required": false
          },
          {
            "in": "formData",
            "name": "code",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Update restriction"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "putApiV2BarongAdminRestrictions"
      },
      "post": {
        "description": "Create restriction",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "scope",
            "type": "string",
            "enum": [
              "continent",
              "country",
              "ip",
              "ip_subnet",
              "all"
            ],
            "required": true
          },
          {
            "in": "formData",
            "name": "value",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string",
            "enum": [
              "whitelist",
              "maintenance",
              "blacklist"
            ],
            "required": true
          },
          {
            "in": "formData",
            "name": "state",
            "type": "string",
            "default": "enabled",
            "enum": [
              "enabled",
              "disabled"
            ],
            "required": false
          },
          {
            "in": "formData",
            "name": "code",
            "type": "integer",
            "format": "int32",
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "201": {
            "description": "Create restriction"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "postApiV2BarongAdminRestrictions"
      },
      "get": {
        "description": "Returns array of restrictions as a paginated collection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "scope",
            "type": "string",
            "enum": [
              "continent",
              "country",
              "ip",
              "ip_subnet",
              "all"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "category",
            "type": "string",
            "enum": [
              "whitelist",
              "maintenance",
              "blacklist"
            ],
            "required": false
          },
          {
            "in": "query",
            "name": "range",
            "type": "string",
            "default": "created",
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page number (defaults to 1).",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of users per page (defaults to 100, maximum is 100).",
            "type": "integer",
            "format": "int32",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns array of restrictions as a paginated collection"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "getApiV2BarongAdminRestrictions"
      }
    },
    "/api/v2/barong/admin/restrictions/whitelink": {
      "post": {
        "description": "Create whitelink",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "expire_time",
            "description": "link will be active for (Time.now + expire_time in following range)",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "minimum": 1,
            "maximum": 30,
            "required": false
          },
          {
            "in": "formData",
            "name": "range",
            "description": "In combination with expire_time gives full controll over token expiration",
            "type": "string",
            "default": "day",
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "201": {
            "description": "Create whitelink"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "postApiV2BarongAdminRestrictionsWhitelink"
      }
    },
    "/api/v2/barong/admin/profiles": {
      "post": {
        "description": "Create a profile for user",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "uid",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "first_name",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "last_name",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "dob",
            "type": "string",
            "format": "date",
            "required": false
          },
          {
            "in": "formData",
            "name": "address",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "postcode",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "city",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "country",
            "type": "string",
            "required": false
          },
          {
            "in": "formData",
            "name": "metadata",
            "description": "Any additional key: value pairs in json string format",
            "type": "string",
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "201": {
            "description": "Create a profile for user"
          },
          "400": {
            "description": "Required params are empty"
          },
          "401": {
            "description": "Invalid bearer token"
          },
          "422": {
            "description": "Validation errors"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "postApiV2BarongAdminProfiles"
      },
      "put": {
        "description": "Verify user's profile",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "uid",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "state",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Verify user's profile"
          },
          "400": {
            "description": "Required params are empty"
          },
          "401": {
            "description": "Invalid bearer token"
          },
          "422": {
            "description": "Validation errors"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "putApiV2BarongAdminProfiles"
      },
      "get": {
        "description": "Return all profiles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Page number (defaults to 1).",
            "type": "integer",
            "format": "int32",
            "default": 1,
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Number of users per page (defaults to 100, maximum is 100).",
            "type": "integer",
            "format": "int32",
            "default": 100,
            "minimum": 1,
            "maximum": 100,
            "required": false
          }
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Return all profiles"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "getApiV2BarongAdminProfiles"
      }
    },
    "/api/v2/barong/admin/levels": {
      "get": {
        "description": "Returns array of permissions as paginated collection",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "BearerToken": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns array of permissions as paginated collection"
          },
          "401": {
            "description": "Invalid bearer token"
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "getApiV2BarongAdminLevels"
      }
    },
    "/api/v2/barong/admin/abilities": {
      "get": {
        "description": "Get all roles and admin_permissions of barong cancan.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Get all roles and admin_permissions of barong cancan."
          }
        },
        "tags": [
          "api"
        ],
        "operationId": "getApiV2BarongAdminAbilities"
      }
    }
  },
  "definitions": {
    "API_V2_Admin_Entities_ActivityWithUser": {
      "type": "object",
      "properties": {
        "user_ip": {
          "type": "string"
        },
        "user_agent": {
          "type": "string"
        },
        "topic": {
          "type": "string"
        },
        "action": {
          "type": "string"
        },
        "result": {
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/API_V2_Entities_User"
        },
        "created_at": {
          "type": "string"
        }
      }
    },
    "API_V2_Entities_User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "level": {
          "type": "integer",
          "format": "int32"
        },
        "otp": {
          "type": "boolean",
          "description": "is 2FA enabled for account"
        },
        "state": {
          "type": "string"
        },
        "referral_uid": {
          "type": "string",
          "description": "UID of referrer"
        },
        "data": {
          "type": "string",
          "description": "additional phone and profile info"
        }
      }
    },
    "API_V2_Admin_Entities_AdminActivity": {
      "type": "object",
      "properties": {
        "user_ip": {
          "type": "string"
        },
        "user_agent": {
          "type": "string"
        },
        "topic": {
          "type": "string"
        },
        "action": {
          "type": "string"
        },
        "result": {
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "admin": {
          "$ref": "#/definitions/API_V2_Entities_User"
        },
        "target": {
          "$ref": "#/definitions/API_V2_Entities_User"
        },
        "created_at": {
          "type": "string"
        }
      }
    },
    "API_V2_Admin_Entities_Document": {
      "type": "object",
      "properties": {
        "upload": {
          "type": "string",
          "description": "file url"
        },
        "doc_type": {
          "type": "string",
          "description": "document type: passport, driver license"
        },
        "doc_number": {
          "type": "string",
          "description": "document number: AB123123 type"
        },
        "doc_expire": {
          "type": "string",
          "description": "expire date of uploaded documents"
        },
        "metadata": {
          "type": "string",
          "description": "any additional stored data"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "API_V2_Admin_Entities_Phone": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "validated_at": {
          "type": "s",
          "format": "g"
        }
      }
    },
    "API_V2_Admin_Entities_Profile": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string",
          "description": "Last name"
        },
        "dob": {
          "type": "string",
          "format": "date",
          "description": "Birthday date"
        },
        "address": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "description": "Profile additional fields"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "API_V2_Admin_Entities_UserWithKYC": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "level": {
          "type": "integer",
          "format": "int32"
        },
        "otp": {
          "type": "boolean"
        },
        "state": {
          "type": "string"
        },
        "data": {
          "type": "string",
          "description": "additional phone and profile info"
        },
        "profiles": {
          "$ref": "#/definitions/API_V2_Admin_Entities_Profile"
        },
        "labels": {
          "$ref": "#/definitions/API_V2_Entities_AdminLabelView"
        },
        "phones": {
          "$ref": "#/definitions/API_V2_Admin_Entities_Phone"
        },
        "documents": {
          "$ref": "#/definitions/API_V2_Admin_Entities_Document"
        },
        "data_storages": {
          "$ref": "#/definitions/API_V2_Entities_DataStorage"
        },
        "comments": {
          "$ref": "#/definitions/API_V2_Entities_Comment"
        },
        "referral_uid": {
          "type": "string",
          "description": "UID of referrer"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "API_V2_Entities_AdminLabelView": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Label key. [a-z0-9_-]+ should be used. Min - 3, max - 255 characters."
        },
        "value": {
          "type": "string",
          "description": "Label value. [A-Za-z0-9_-] should be used. Min - 3, max - 255 characters."
        },
        "scope": {
          "type": "string",
          "description": "Label scope: 'public' or 'private'"
        },
        "description": {
          "type": "string",
          "description": "Label desc: json string with any additional information"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "API_V2_Entities_DataStorage": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "any additional data title"
        },
        "data": {
          "type": "string",
          "description": "any additional data json key:value pairs"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "API_V2_Entities_Comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "comment id"
        },
        "author_uid": {
          "type": "string",
          "description": "comment author"
        },
        "title": {
          "type": "string",
          "description": "comment title"
        },
        "data": {
          "type": "string",
          "description": "comment plain text"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "API_V2_Admin_Entities_UserWithProfile": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "level": {
          "type": "integer",
          "format": "int32"
        },
        "otp": {
          "type": "boolean",
          "description": "is 2FA enabled for account"
        },
        "state": {
          "type": "string"
        },
        "data": {
          "type": "string",
          "description": "additional phone and profile info"
        },
        "profiles": {
          "$ref": "#/definitions/API_V2_Admin_Entities_Profile"
        },
        "referral_uid": {
          "type": "string",
          "description": "UID of referrer"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    }
  }
}
