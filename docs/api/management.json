{
  "info":{
     "title":"Barong",
     "description":"Management API for barong OAuth server",
     "version":"2.0.30-alpha"
  },
  "swagger":"2.0",
  "produces":[
     "application/json"
  ],
  "securityDefinitions":{
     "BearerToken":{
        "description":"Bearer Token authentication",
        "type":"jwt",
        "name":"Authorization",
        "in":"header"
     }
  },
  "host":"localhost:3000",
  "basePath":"/api/v2/management",
  "tags":[
     {
        "name":"labels",
        "description":"Operations about labels"
     },
     {
        "name":"users",
        "description":"Operations about users"
     },
     {
        "name":"timestamp",
        "description":"Operations about timestamps"
     }
  ],
  "paths":{
     "/labels/delete":{
        "post":{
           "description":"Delete a label with 'private' scope",
           "produces":[
              "application/json"
           ],
           "consumes":[
              "application/json"
           ],
           "parameters":[
              {
                 "in":"formData",
                 "name":"user_uid",
                 "description":"User uid",
                 "type":"string",
                 "required":true
              },
              {
                 "in":"formData",
                 "name":"key",
                 "description":"Label key.",
                 "type":"string",
                 "required":true
              }
           ],
           "responses":{
              "201":{
                 "description":"Delete a label with 'private' scope",
                 "schema":{
                    "$ref":"#/definitions/Label"
                 }
              }
           },
           "tags":[
              "labels"
           ],
           "operationId":"postLabelsDelete"
        }
     },
     "/labels":{
        "put":{
           "description":"Update a label with 'private' scope",
           "produces":[
              "application/json"
           ],
           "consumes":[
              "application/json"
           ],
           "parameters":[
              {
                 "in":"formData",
                 "name":"user_uid",
                 "description":"User uid",
                 "type":"string",
                 "required":true
              },
              {
                 "in":"formData",
                 "name":"key",
                 "description":"Label key.",
                 "type":"string",
                 "required":true
              },
              {
                 "in":"formData",
                 "name":"value",
                 "description":"Label value.",
                 "type":"string",
                 "required":true
              }
           ],
           "responses":{
              "200":{
                 "description":"Update a label with 'private' scope",
                 "schema":{
                    "$ref":"#/definitions/Label"
                 }
              }
           },
           "tags":[
              "labels"
           ],
           "operationId":"putLabels"
        },
        "post":{
           "description":"Create a label with 'private' scope and assigns to users",
           "produces":[
              "application/json"
           ],
           "consumes":[
              "application/json"
           ],
           "parameters":[
              {
                 "in":"formData",
                 "name":"user_uid",
                 "description":"User uid",
                 "type":"string",
                 "required":true
              },
              {
                 "in":"formData",
                 "name":"key",
                 "description":"Label key.",
                 "type":"string",
                 "required":true
              },
              {
                 "in":"formData",
                 "name":"value",
                 "description":"Label value.",
                 "type":"string",
                 "required":true
              }
           ],
           "responses":{
              "201":{
                 "description":"Create a label with 'private' scope and assigns to users",
                 "schema":{
                    "$ref":"#/definitions/Label"
                 }
              }
           },
           "tags":[
              "labels"
           ],
           "operationId":"postLabels"
        }
     },
     "/labels/list":{
        "post":{
           "description":"Get all labels assigned to users",
           "produces":[
              "application/json"
           ],
           "consumes":[
              "application/json"
           ],
           "parameters":[
              {
                 "in":"formData",
                 "name":"user_uid",
                 "description":"User uid",
                 "type":"string",
                 "required":true
              }
           ],
           "responses":{
              "201":{
                 "description":"Get all labels assigned to users",
                 "schema":{
                    "$ref":"#/definitions/Label"
                 }
              }
           },
           "tags":[
              "labels"
           ],
           "operationId":"postLabelsList"
        }
     },
     "/users/import":{
        "post":{
           "description":"Imports an existing user",
           "produces":[
              "application/json"
           ],
           "consumes":[
              "application/json"
           ],
           "parameters":[
              {
                 "in":"formData",
                 "name":"email",
                 "description":"User Email",
                 "type":"string",
                 "required":true
              },
              {
                 "in":"formData",
                 "name":"password_digest",
                 "description":"User Password Hash",
                 "type":"string",
                 "required":true
              },
              {
                 "in":"formData",
                 "name":"phone",
                 "type":"string",
                 "required":false
              },
              {
                 "in":"formData",
                 "name":"first_name",
                 "type":"string",
                 "required":false
              },
              {
                 "in":"formData",
                 "name":"last_name",
                 "type":"string",
                 "required":false
              },
              {
                 "in":"formData",
                 "name":"dob",
                 "description":"Birthday date",
                 "type":"string",
                 "format":"date",
                 "required":false
              },
              {
                 "in":"formData",
                 "name":"address",
                 "type":"string",
                 "required":false
              },
              {
                 "in":"formData",
                 "name":"postcode",
                 "type":"string",
                 "required":false
              },
              {
                 "in":"formData",
                 "name":"city",
                 "type":"string",
                 "required":false
              },
              {
                 "in":"formData",
                 "name":"country",
                 "type":"string",
                 "required":false
              }
           ],
           "responses":{
              "201":{
                 "description":"Imports an existing user",
                 "schema":{
                    "$ref":"#/definitions/UserWithProfile"
                 }
              }
           },
           "tags":[
              "users"
           ],
           "operationId":"postUsersImport"
        }
     },
     "/users":{
        "post":{
           "description":"Creates new user",
           "produces":[
              "application/json"
           ],
           "consumes":[
              "application/json"
           ],
           "parameters":[
              {
                 "in":"formData",
                 "name":"email",
                 "description":"User Email",
                 "type":"string",
                 "required":true
              },
              {
                 "in":"formData",
                 "name":"password",
                 "description":"User Password",
                 "type":"string",
                 "required":true
              }
           ],
           "responses":{
              "201":{
                 "description":"Creates new user",
                 "schema":{
                    "$ref":"#/definitions/UserWithProfile"
                 }
              }
           },
           "tags":[
              "users"
           ],
           "operationId":"postUsers"
        }
     },
     "/users/get":{
        "post":{
           "description":"Get users and profile information",
           "produces":[
              "application/json"
           ],
           "consumes":[
              "application/json"
           ],
           "parameters":[
              {
                 "in":"formData",
                 "name":"uid",
                 "description":"User uid",
                 "type":"string",
                 "required":true
              }
           ],
           "responses":{
              "201":{
                 "description":"Get users and profile information",
                 "schema":{
                    "$ref":"#/definitions/UserWithProfile"
                 }
              }
           },
           "tags":[
              "users"
           ],
           "operationId":"postUsersGet"
        }
     },
     "/timestamp":{
        "post":{
           "description":"Returns server time in seconds since Unix epoch.",
           "produces":[
              "application/json"
           ],
           "consumes":[
              "application/json"
           ],
           "responses":{
              "201":{
                 "description":"Returns server time in seconds since Unix epoch."
              }
           },
           "tags":[
              "timestamp"
           ],
           "operationId":"postTimestamp"
        }
     }
  },
  "definitions":{
     "Label":{
        "type":"object",
        "properties":{
           "key":{
              "type":"string",
              "description":"Label key. [a-z0-9_-]+ should be used. Min - 3, max - 255 characters."
           },
           "value":{
              "type":"string",
              "description":"Label value. [A-Za-z0-9_-] should be used. Min - 3, max - 255 characters."
           },
           "scope":{
              "type":"string",
              "description":"Label scope: 'public' or 'private'"
           },
           "created_at":{
              "type":"string"
           },
           "updated_at":{
              "type":"string"
           }
        },
        "description":"Get all labels assigned to users"
     },
     "UserWithProfile":{
        "type":"object",
        "properties":{
           "email":{
              "type":"string"
           },
           "uid":{
              "type":"string"
           },
           "role":{
              "type":"string"
           },
           "level":{
              "type":"integer",
              "format":"int32"
           },
           "otp":{
              "type":"boolean",
              "description":"is 2FA enabled for account"
           },
           "state":{
              "type":"string"
           },
           "profile":{
              "$ref":"#/definitions/Profile"
           },
           "created_at":{
              "type":"string"
           },
           "updated_at":{
              "type":"string"
           }
        },
        "description":"Get users and profile information"
     },
     "Profile":{
        "type":"object",
        "properties":{
           "first_name":{
              "type":"string"
           },
           "last_name":{
              "type":"string"
           },
           "dob":{
              "type":"string",
              "format":"date",
              "description":"Birthday date"
           },
           "address":{
              "type":"string"
           },
           "postcode":{
              "type":"string"
           },
           "city":{
              "type":"string"
           },
           "country":{
              "type":"string"
           },
           "metadata":{
              "type":"object",
              "description":"Profile additional fields"
           }
        }
     },
     "APIKey":{
        "type":"object",
        "properties":{
           "kid":{
              "type":"string",
              "description":"jwt public key"
           },
           "algorithm":{
              "type":"string",
              "description":"cryptographic hash function type"
           },
           "scope":{
              "type":"string",
              "description":"serialized array of scopes"
           },
           "state":{
              "type":"string",
              "description":"active/non-active state of key"
           },
           "secret":{
              "type":"string"
           },
           "created_at":{
              "type":"string"
           },
           "updated_at":{
              "type":"string"
           }
        }
     },
     "User":{
        "type":"object",
        "properties":{
           "email":{
              "type":"string"
           },
           "uid":{
              "type":"string"
           },
           "role":{
              "type":"string"
           },
           "level":{
              "type":"integer",
              "format":"int32"
           },
           "otp":{
              "type":"boolean",
              "description":"is 2FA enabled for account"
           },
           "state":{
              "type":"string"
           }
        }
     },
     "UserWithFullInfo":{
        "type":"object",
        "properties":{
           "email":{
              "type":"string"
           },
           "uid":{
              "type":"string"
           },
           "role":{
              "type":"string"
           },
           "level":{
              "type":"integer",
              "format":"int32"
           },
           "otp":{
              "type":"boolean"
           },
           "state":{
              "type":"string"
           },
           "profile":{
              "$ref":"#/definitions/Profile"
           },
           "labels":{
              "$ref":"#/definitions/Label"
           },
           "phones":{
              "$ref":"#/definitions/Phone"
           },
           "documents":{
              "$ref":"#/definitions/Document"
           },
           "created_at":{
              "type":"string"
           },
           "updated_at":{
              "type":"string"
           }
        }
     },
     "Phone":{
        "type":"object",
        "properties":{
           "country":{
              "type":"string"
           },
           "number":{
              "type":"string"
           },
           "validated_at":{
              "type":"s",
              "format":"g"
           }
        }
     },
     "Document":{
        "type":"object",
        "properties":{
           "upload":{
              "type":"string",
              "description":"file url"
           },
           "doc_type":{
              "type":"string",
              "description":"document type: passport, driver license"
           },
           "doc_number":{
              "type":"string",
              "description":"document number: AB123123 type"
           },
           "doc_expire":{
              "type":"string",
              "description":"expire date of uploaded documents"
           },
           "metadata":{
              "type":"string",
              "description":"any additional stored data"
           },
           "created_at":{
              "type":"string"
           },
           "updated_at":{
              "type":"string"
           }
        }
     }
  }
}