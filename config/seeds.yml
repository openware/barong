#
# email and level are required for users
#
# permissions defines user roles and abilities

# If you want to seed users follow example below
# users:
#   - email: <%= ENV.fetch("BARONG_ADMIN_EMAIL", "admin@barong.io") %>
#     password: <%= ENV.fetch("BARONG_ADMIN_PASSWORD", nil) %>
#     role: "admin"
#     state: "active"
#     level: 1

levels:
  - key: email
    value: verified
    description: "User clicked on the confirmation link"
  - key: phone
    value: verified
    description: "User entered a valid code from sms"
  - key: document
    value: verified
    description: "User personal documents have been verified"

restrictions:
  - { category: whitelist, scope: country, value: UA, state: disabled }
  - { category: maintenance, scope: all, value: all, state: disabled }
  - { category: blacklist, scope: ip, value: 164.116.47.255, state: disabled, code: 433 }
  - { category: blacklist, scope: ip_subnet, value: 164.116.47.0/24, state: disabled, code: 434 }
  - { category: blacklist, scope: country, value: USA, state: disabled, code: 435 }
  - { category: blacklist, scope: continent, value: SA, state: disabled, code: 436 }

permissions:
 # SUPER ADMIN has an access to the whole system without any limits
 # so we can just grant him access to /api/v2/*
 - { role: superadmin, verb: all, path: api/v2, action: accept }
 # Rango(ranger) access
 - { role: superadmin, verb: get, path: api/v2/ranger, action: accept }
 # we are watching after you 0_0
 - { role: superadmin, verb: post, path: api/v2/, action: audit }
 - { role: superadmin, verb: put, path: api/v2/, action: audit }
 - { role: superadmin, verb: delete, path: api/v2/, action: audit }

# ADMIN
# admin has nearly full access to barong and peatio api, except managing permissions
 - { role: admin, verb: all, path: api/v2, action: accept }

 # ranger access
 - { role: admin, verb: get, path: api/v2/ranger, action: accept }
 # Finex upstream access
 - { role: admin, verb: get, path: api/v2/open_finance, action: accept }
 # admin doesnt have access to manage platform roles and permissions
 - { role: admin, verb: all, path: api/v2/barong/admin/permissions, action: drop }
 # admin doesnt have access to manage roles
 - { role: admin, verb: all, path: api/v2/barong/admin/users/role, action: drop }
 # admin doesnt have access to admin activities
 - { role: admin, verb: all, path: api/v2/barong/admin/activities/admin, action: drop }
 # we are watching after you 0_0
 - { role: admin, verb: post, path: api/v2/, action: audit }
 - { role: admin, verb: put, path: api/v2/, action: audit }
 - { role: admin, verb: delete, path: api/v2/, action: audit }

 # ACCOUNTANT
 # accountant has a read access to Barong admin
 - { role: accountant, verb: get, path: api/v2/barong/admin, action: accept }
 # accountant has a read access to Peatio financial information and creating of adjustments
 - { role: accountant, verb: get, path: api/v2/peatio/admin/members, action: accept }
 - { role: accountant, verb: get, path: api/v2/peatio/admin/beneficiaries, action: accept }
 - { role: accountant, verb: get, path: api/v2/peatio/admin/currencies, action: accept }
 - { role: accountant, verb: get, path: api/v2/peatio/admin/blockchains, action: accept }
 - { role: accountant, verb: get, path: api/v2/peatio/admin/orders, action: accept }
 - { role: accountant, verb: get, path: api/v2/peatio/admin/markets, action: accept }
 - { role: accountant, verb: get, path: api/v2/peatio/admin/engine, action: accept }
 - { role: accountant, verb: get, path: api/v2/peatio/admin/trades, action: accept }
 - { role: accountant, verb: get, path: api/v2/peatio/admin/deposits, action: accept }
 - { role: accountant, verb: get, path: api/v2/peatio/admin/withdraws, action: accept }
 - { role: accountant, verb: get, path: api/v2/peatio/admin/adjustments, action: accept }
 - { role: accountant, verb: post, path: api/v2/peatio/admin/adjustments/new, action: accept }
 - { role: accountant, verb: get, path: api/v2/peatio/admin/assets, action: accept }
 - { role: accountant, verb: get, path: api/v2/peatio/admin/liabilities, action: accept }
 - { role: accountant, verb: get, path: api/v2/peatio/admin/revenues, action: accept }
 - { role: accountant, verb: get, path: api/v2/peatio/admin/expenses, action: accept }
 # accountant doesnt have access to see pending documents
 - { role: accountant, verb: get, path: api/v2/barong/admin/users/documents/pending, action: drop }
 # accountant doesnt have access to manage platform roles and permissions
 - { role: accountant, verb: all, path: api/v2/barong/admin/users/role, action: drop }
 - { role: accountant, verb: all, path: api/v2/barong/admin/permissions, action: drop }
 # accountant doesnt have access to admin activities
 - { role: accountant, verb: all, path: api/v2/barong/admin/activities/admin, action: drop }
 # we are watching after you 0_0
 - { role: accountant, verb: post, path: api/v2/, action: audit }
 - { role: accountant, verb: put, path: api/v2/, action: audit }
 - { role: accountant, verb: delete, path: api/v2/, action: audit }
 # has standard user permissions to ACCOUNT, MARKET, RESOURCE modules
 - { role: accountant, verb: all, path: api/v2/peatio/account, action: accept }
 - { role: accountant, verb: all, path: api/v2/peatio/market, action: accept }
 - { role: accountant, verb: all, path: api/v2/finex/market, action: accept }
 - { role: accountant, verb: all, path: api/v2/barong/resource, action: accept }
 # ranger access
 - { role: accountant, verb: get, path: api/v2/ranger, action: accept }
 # applogic access
 - { role: accountant, verb: all, path: api/v2/applogic, action: accept }
 # get abilities
 - { role: accountant, verb: all, path: api/v2/peatio/admin/abilities, action: accept }
 - { role: accountant, verb: all, path: api/v2/barong/admin/abilities, action: accept }

 # COMPLIANCE
 # has read access to Barong
 - { role: compliance, verb: get, path: api/v2/barong/admin, action: accept }
 # has an access to CRUD of user-related resources
 - { role: compliance, verb: get, path: api/v2/peatio/admin/members, action: accept }
 - { role: compliance, verb: get, path: api/v2/peatio/admin/beneficiaries, action: accept }
 - { role: compliance, verb: get, path: api/v2/peatio/admin/currencies, action: accept }
 - { role: compliance, verb: all, path: api/v2/barong/admin/users, action: accept }
 # has ability to see deposit, withdraw, operations (partial)
 - { role: compliance, verb: get, path: api/v2/peatio/admin/deposits, action: accept }
 - { role: compliance, verb: get, path: api/v2/peatio/admin/withdraws, action: accept }
 - { role: compliance, verb: get, path: api/v2/peatio/admin/assets, action: accept }
 - { role: compliance, verb: get, path: api/v2/peatio/admin/liabilities, action: accept }
 - { role: compliance, verb: get, path: api/v2/peatio/admin/expenses, action: accept }
 - { role: compliance, verb: get, path: api/v2/peatio/admin/markets, action: accept }
 - { role: compliance, verb: get, path: api/v2/peatio/admin/engine, action: accept }
 # has no ability to see the configurations
 - { role: compliance, verb: all, path: api/v2/peatio/admin/adjustments, action: drop }
 - { role: compliance, verb: all, path: api/v2/peatio/admin/revenues, action: drop }
 - { role: compliance, verb: all, path: api/v2/peatio/admin/blockchains, action: drop }
 - { role: compliance, verb: all, path: api/v2/peatio/admin/wallets, action: drop }
 - { role: compliance, verb: all, path: api/v2/peatio/admin/trading_fees, action: drop }
 - { role: compliance, verb: all, path: api/v2/peatio/admin/withdraw_limits, action: drop }
 - { role: compliance, verb: all, path: api/v2/barong/admin/restrictions, action: drop }
 # compliance doesnt have access to change users roles
 - { role: compliance, verb: all, path: api/v2/barong/admin/users/role, action: drop }
 # compliance doesnt have access to admin activities
 - { role: compliance, verb: all, path: api/v2/barong/admin/activities/admin, action: drop }
 # compliance doesnt have access to manage platform roles and permissions
 - { role: compliance, verb: all, path: api/v2/barong/admin/permissions, action: drop }
 # we are watching after you 0_0
 - { role: compliance, verb: post, path: api/v2/, action: audit }
 - { role: compliance, verb: put, path: api/v2/, action: audit }
 - { role: compliance, verb: delete, path: api/v2/, action: audit }
 # has standard user permissions to ACCOUNT, MARKET, RESOURCE modules
 - { role: compliance, verb: all, path: api/v2/peatio/account, action: accept }
 - { role: compliance, verb: all, path: api/v2/peatio/market, action: accept }
 - { role: compliance, verb: all, path: api/v2/finex/market, action: accept }
 - { role: compliance, verb: all, path: api/v2/barong/resource, action: accept }
 # ranger access
 - { role: compliance, verb: get, path: api/v2/ranger, action: accept }
 # applogic access
 - { role: compliance, verb: all, path: api/v2/applogic, action: accept }
 # get abilities
 - { role: compliance, verb: all, path: api/v2/peatio/admin/abilities, action: accept }
 - { role: compliance, verb: all, path: api/v2/barong/admin/abilities, action: accept }

 # TECHNICAL
 # technical has a read access to Barong and Peatio admin
 - { role: technical, verb: get, path: api/v2/barong/admin, action: accept }
 - { role: technical, verb: get, path: api/v2/peatio/admin, action: accept }
 # technical has a configuration access to Peatio admin
 - { role: technical, verb: all, path: api/v2/peatio/admin/blockchains, action: accept }
 - { role: technical, verb: all, path: api/v2/peatio/admin/currencies, action: accept }
 - { role: technical, verb: all, path: api/v2/peatio/admin/markets, action: accept }
 - { role: technical, verb: all, path: api/v2/peatio/admin/wallets, action: accept }
 - { role: technical, verb: all, path: api/v2/peatio/admin/trading_fees, action: accept }
 - { role: technical, verb: all, path: api/v2/peatio/admin/withdraw_limits, action: accept }
 # technical has access to delete orders
 - { role: technical, verb: delete, path: api/v2/finex/admin/bulk/orders_by_id, action: accept }
 - { role: technical, verb: post, path: api/v2/finex/admin/orders/cancel, action: accept }
 # technical has an ability to create and update restrictions
 - { role: technical, verb: all, path: api/v2/barong/admin/restrictions, action: accept }
 # has no ability to see and update Deposit, Withdraw, Adjustments
 - { role: technical, verb: all, path: api/v2/peatio/admin/deposits, action: drop }
 - { role: technical, verb: all, path: api/v2/peatio/admin/withdraws, action: drop }
 - { role: technical, verb: all, path: api/v2/peatio/admin/adjustments, action: drop }
 # Finex upstream access
 - { role: technical, verb: get, path: api/v2/open_finance, action: accept }
 # technical doesnt have access to see pending documents
 - { role: technical, verb: get, path: api/v2/barong/admin/users/documents/pending, action: drop }
 # technical doesnt have access to admin activities
 - { role: technical, verb: all, path: api/v2/barong/admin/activities/admin, action: drop }
 # technical doesnt have access to manage platform roles and permissions
 - { role: technical, verb: all, path: api/v2/barong/admin/permissions, action: drop }
 # we are watching after you 0_0
 - { role: technical, verb: post, path: api/v2/, action: audit }
 - { role: technical, verb: put, path: api/v2/, action: audit }
 - { role: technical, verb: delete, path: api/v2/, action: audit }
 # has standard user permissions to ACCOUNT, MARKET, RESOURCE modules
 - { role: technical, verb: all, path: api/v2/peatio/account, action: accept }
 - { role: technical, verb: all, path: api/v2/peatio/market, action: accept }
 - { role: technical, verb: all, path: api/v2/finex/market, action: accept }
 - { role: technical, verb: all, path: api/v2/barong/resource, action: accept }
 # ranger access
 - { role: technical, verb: get, path: api/v2/ranger, action: accept }
 # applogic access
 - { role: technical, verb: all, path: api/v2/applogic, action: accept }
 # get abilities
 - { role: technical, verb: all, path: api/v2/peatio/admin/abilities, action: accept }
 - { role: technical, verb: all, path: api/v2/barong/admin/abilities, action: accept }

 # SUPPORT
 # has read only access to several statistic and user-related endpoints
 - { role: support, verb: get, path: api/v2/barong/admin, action: accept }
 - { role: support, verb: get, path: api/v2/peatio/admin, action: accept }
 # has no ability to see the configurations
 - { role: support, verb: all, path: api/v2/peatio/admin/adjustments, action: drop }
 - { role: support, verb: all, path: api/v2/peatio/admin/revenues, action: drop }
 - { role: support, verb: all, path: api/v2/peatio/admin/blockchains, action: drop }
 - { role: support, verb: all, path: api/v2/peatio/admin/wallets, action: drop }
 - { role: support, verb: all, path: api/v2/peatio/admin/trading_fees, action: drop }
 - { role: support, verb: all, path: api/v2/peatio/admin/withdraw_limits, action: drop }
 - { role: support, verb: all, path: api/v2/barong/admin/restrictions, action: drop }
 # has ability to disable 2FA
 - { role: support, verb: post, path: api/v2/barong/admin/users/update, action: accept }
 # support doesnt have access to admin activities
 - { role: support, verb: all, path: api/v2/barong/admin/activities/admin, action: drop }
 # support doesnt have access to manage platform roles and permissions
 - { role: support, verb: all, path: api/v2/barong/admin/permissions, action: drop }
 - { role: support, verb: all, path: api/v2/barong/admin/permissions, action: drop }
 # we are watching after you 0_0
 - { role: support, verb: post, path: api/v2/, action: audit }
 - { role: support, verb: put, path: api/v2/, action: audit }
 - { role: support, verb: delete, path: api/v2/, action: audit }
 # has standard user permissions to ACCOUNT, MARKET, RESOURCE modules
 - { role: support, verb: all, path: api/v2/peatio/account, action: accept }
 - { role: support, verb: all, path: api/v2/peatio/market, action: accept }
 - { role: support, verb: all, path: api/v2/finex/market, action: accept }
 - { role: support, verb: all, path: api/v2/barong/resource, action: accept }
 # ranger access
 - { role: support, verb: get, path: api/v2/ranger, action: accept }
 # applogic access
 - { role: support, verb: all, path: api/v2/applogic, action: accept }
 # get abilities
 - { role: support, verb: all, path: api/v2/peatio/admin/abilities, action: accept }
 - { role: support, verb: all, path: api/v2/barong/admin/abilities, action: accept }

# TRADER
 # has standard user permissions to ACCOUNT, MARKET, RESOURCE modules
 - { role: trader, verb: all, path: api/v2/peatio/account, action: accept }
 - { role: trader, verb: all, path: api/v2/peatio/market, action: accept }
 - { role: trader, verb: all, path: api/v2/finex/market, action: accept }
 - { role: trader, verb: all, path: api/v2/barong/resource, action: accept }
 # ranger access
 - { role: trader, verb: get, path: api/v2/ranger, action: accept }
 # Finex upstream access
 - { role: trader, verb: get, path: api/v2/open_finance, action: accept }
 # applogic access
 - { role: trader, verb: all, path: api/v2/applogic, action: accept }

 # BROKER
 # has standard user permissions to ACCOUNT, MARKET, RESOURCE modules
 - { role: broker, verb: all, path: api/v2/peatio/account, action: accept }
 - { role: broker, verb: all, path: api/v2/peatio/market, action: accept }
 - { role: broker, verb: all, path: api/v2/finex/market, action: accept }
 - { role: broker, verb: all, path: api/v2/barong/resource, action: accept }
 # ranger access
 - { role: broker, verb: get, path: api/v2/ranger, action: accept }
 # Finex upstream access
 - { role: broker, verb: get, path: api/v2/open_finance, action: accept }
 #applogic access
 - { role: broker, verb: all, path: api/v2/applogic, action: accept }

 # MEMBER
 - { role: member, verb: all, path: api/v2/peatio/account, action: accept }
 - { role: member, verb: all, path: api/v2/peatio/market, action: accept }
 - { role: member, verb: all, path: api/v2/finex/market, action: accept }
 - { role: member, verb: all, path: api/v2/barong/resource, action: accept }
 # ranger access
 - { role: member, verb: get, path: api/v2/ranger, action: accept }
 # Finex upstream access
 - { role: member, verb: get, path: api/v2/open_finance, action: accept }
 # applogic access
 - { role: member, verb: all, path: api/v2/applogic, action: accept }

 # MAKER
 - { role: maker, verb: all, path: api/v2/peatio/account, action: accept }
 - { role: maker, verb: all, path: api/v2/peatio/market, action: accept }
 - { role: maker, verb: all, path: api/v2/finex/market, action: accept }
 - { role: maker, verb: all, path: api/v2/barong/resource, action: accept }
 # ranger access
 - { role: maker, verb: get, path: api/v2/ranger, action: accept }
 # Finex upstream access
 - { role: maker, verb: get, path: api/v2/open_finance, action: accept }
 # applogic access
 - { role: maker, verb: all, path: api/v2/applogic, action: accept }

 # Service Account  Maker
 # has standard user permissions to ACCOUNT, MARKET, RESOURCE modules
 - { role: sa_maker, verb: all, path: api/v2/peatio/account, action: accept }
 - { role: sa_maker, verb: all, path: api/v2/peatio/market, action: accept }
 - { role: sa_maker, verb: all, path: api/v2/finex/market, action: accept }
 - { role: sa_maker, verb: all, path: api/v2/barong/resource, action: accept }
 # Service Account can not interact with Password, 2FA, KYC, API keys, Beneficiary, Deposit and Withdraw
 - { role: sa_maker, verb: all, path: api/v2/barong/resource/otp, action: drop }
 - { role: sa_maker, verb: all, path: api/v2/barong/resource/phones, action: drop }
 - { role: sa_maker, verb: all, path: api/v2/barong/resource/profiles, action: drop }
 - { role: sa_maker, verb: all, path: api/v2/barong/resource/documents, action: drop }
 - { role: sa_maker, verb: all, path: api/v2/barong/resource/addresses, action: drop }
 - { role: sa_maker, verb: all, path: api/v2/applogic/private/tenants, action: drop }
 - { role: sa_maker, verb: all, path: api/v2/barong/resource/api_keys, action: drop }
 - { role: sa_maker, verb: all, path: api/v2/barong/resource/users/password, action: drop }
 - { role: sa_maker, verb: all, path: api/v2/peatio/account/deposit_address, action: drop }
 - { role: sa_maker, verb: all, path: api/v2/peatio/account/withdraws, action: drop }
 - { role: sa_maker, verb: all, path: api/v2/peatio/account/beneficiaries, action: drop }
 # Finex upstream access
 - { role: sa_maker, verb: get, path: api/v2/open_finance, action: accept }
 # ranger access
 - { role: sa_maker, verb: get, path: api/v2/ranger, action: accept }
 # applogic access
 - { role: sa_maker, verb: all, path: api/v2/applogic, action: accept }
